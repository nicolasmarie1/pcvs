compiler:
  compilers:
    cc: {program: gcc}
    cxx: {program: g++}
    f08: {program: gfortran}
    f77: {program: gfortran}
    f90: {program: gfortran}
    fc: {program: gfortran}
criterion:
  n_omp:
    subtitle: o
    values: [1, 2, 4, 8]
group:
  GRPMPI:
    run:
      iterate:
        n_omp: {values: null}
machine: {concurrent_run: 4, cores_per_node: 4, name: localhost, nodes: 1}
runtime:
  criterions:
    n_omp: {numeric: true, option: OMP_NUM_THREADS=, type: environment}
  plugin: "from pcvs.plugins import Plugin\n\n\nclass OpenMPPlugin(Plugin):\n    step
    = Plugin.Step.TEST_EVAL\n\n    def run(self, *args, **kwargs):\n        # returns
    True if the combination should be used\n        config = kwargs['config']\n        nb_nodes
    = config['machine'].get('nodes', 1)\n        nb_cores = config['machine'].get('cores_per_node',
    1)\n\n        comb = kwargs['combination']\n        n_omp = comb.get('n_omp',
    0)\n        n_node = comb.get('n_node', 1)\n\n        if ((n_omp > nb_cores) or\n
    \               (n_node > nb_nodes)):\n            return False\n        else:\n
    \           return True\n"
  program: ''

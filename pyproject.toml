[build-system]
# sh is needed to add git rev at the end of the version
requires = ["setuptools", "sh"]
build-backend = "setuptools.build_meta"

[project]
name = "pcvs"
dependencies = [
  "ruamel.yaml",
  "Click>=8.0",
  "requests",
  "jsonschema>=3.0.0",
  "flask",
  "sh",
  "rich",
  "rich-click",
  "pygit2<=1.14.1; python_version >= '3.7'",
  "textual>=0.29.0; python_version >= '3.7'",
  "matplotlib",
]
requires-python = ">=3.5"
authors = [
  {name = "Julien Adam", email = "adamj@paratools.com"},
  {name = "Nicolas Marie", email = "nicolas.marie@uvsq.fr"},
  {name = "Paul Canat", email = "pcanat@paratools.com"},
]
maintainers = [
# Nobody right now
]
description = "A Validation Orchestrator designed by and for software at scale."
readme = "README.md"
license = { text = "CeCILL-C"}
#license-files = ["COPYING"]
keywords = ["validation", "hpc", "test-suite"]
classifiers = [
  'Topic :: Software Development :: Quality Assurance',
  'Topic :: Software Development :: Testing',
]
dynamic = ["version"]

[project.urls]
Homepage = "https://pcvs.io"
Documentation = "https://pcvs.readthedocs.io/"
Repository = "https://github.com/cea-hpc/pcvs"
Issues = "https://github.com/cea-hpc/pcvs/issues"
Changelog = "https://github.com/cea-hpc/pcvs/blob/master/CHANGES"

[project.scripts]
pcvs = "pcvs.main:cli"

[project.optional-dependencies]
dev = [
  "autopep8",
  "darglint",
  "pydocstyle",
  "flake8",
  "pylint",
  "pytest",
  "coverage",
  "docstr-coverage",
  "tox",
  "isort",
  "mypy",
  "sphinx<7.0.0",
  "sphinx-autodoc-typehints",
  "sphinx_rtd_theme",
]

# tell setuptools look for all python packages to include,
# in addition, files are also included from Manifest.in
[tool.setuptools.packages.find]
where = ["."]

#
# TOX Configuration
#

[tool.tox]
env_list = ["3.12.3"]
skipsdist = true
skip_missing_interpreters = true

# Base env
[tool.tox.env_run_base]
# Gather the dependencies from the fields above.
# see: https://tox.wiki/en/latest/config.html#references-within-set-env
#deps = [{ replace = "ref", of = ["project", "dependencies"], extend = true},
#        { replace = "ref", of = ["project", "optional-dependencies", "dev"], extend = true}]
passenv = ["HOME", "USER"]
allowlist_externals = ["coverage", "pylint", "flake8", "isort", "mypy", "docstr-coverage", "darglint", "pydocstyle", "make"]

# pcvs coverage
[tool.tox.env.pcvs-coverage]
commands = [
  [
    'coverage', 'erase'
  ],
  [
    'coverage', 'run', '--source=./pcvs', '-m', 'pytest', './tests/pcvs'
  ],
  [
    'coverage', 'report', '--precision=2', '--fail-under=50', '--sort=-miss'
  ],
]

# pcvs linter
[tool.tox.env.pcvs-lint]
skip_install = true
ignore_errors = true
commands = [
  [
    'pylint', '.',
    '--fail-under=10',
    '--ignore=.tox,build,examples',
    '--extension-pkg-whitelist=pygit2',
    '--disable=R,C',
    '--disable=unspecified-encoding',
    '--disable=keyword-arg-before-vararg,dangerous-default-value',
    '--disable=global-variable-not-assigned,global-statement',
    '--disable=broad-exception-caught',
    '--disable=fixme',
  ],
  # add more type and import checking
  [
    'flake8', '.', '--exclude', '.tox,build',
    '--ignore',
    'DAR101,DAR102,DAR201,DAR202,DAR301,DAR401,DAR402,E501,E125,E126,E127,E128,E265,F824,W503,W504'
  ],
  # sort and lint imports
  [
    'isort', '--sl', '--fass', '--check', '--diff', '.'
  ],
  # TODO: reenable mypy
  # add strict typing check
  #[
  #  'mypy', '--config-file', './mypy.ini', './pcvs'
  #],
]

# TODO: replace pylint --disable=R,C with the following
#'--disable=line-too-long,too-many-lines'
#'--disable=missing-module-docstring,missing-class-docstring,missing-function-docstring'
#'--disable=too-many-instance-attributes,too-few-public-methods'
#'--disable=too-many-arguments,too-many-positional-arguments'
#'--disable=too-many-nested-blocks,too-many-branches,too-many-locals'
#'--disable=consider-using-f-string'


# Documentation coverage
[tool.tox.env.doc-coverage]
commands = [
  [
    'docstr-coverage', '--skip-file-doc', '--exclude', '.*pcvs/cli/cli.*.py',
    '--accept-empty', '--verbose=2', 'pcvs', '--fail-under', '70'
  ],
]

# Documentation linter
[tool.tox.env.doc-lint]
skip_install = true
ignore_errors = true
commands = [
  [
    'darglint', '--verbosity=2', 'docs', 'pcvs', 'tests'
  ],
  [
    'pydocstyle', 'pcvs/'
  ],
]

# Documentation builder
[tool.tox.env.doc]
allowlist_externals = ['make']
changedir = 'docs'
commands = [
  [
    'make', 'html'
  ],
]

